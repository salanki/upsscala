// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package com.ups.ship


case class ShipmentRequest(Request: com.ups.ship.RequestType,
  Shipment: com.ups.ship.ShipmentType,
  LabelSpecification: Option[com.ups.ship.LabelSpecificationType] = None,
  ReceiptSpecification: Option[com.ups.ship.ReceiptSpecificationType] = None)


case class ShipConfirmRequest(Request: com.ups.ship.RequestType,
  Shipment: com.ups.ship.ShipmentType,
  LabelSpecification: Option[com.ups.ship.LabelSpecificationType] = None,
  ReceiptSpecification: Option[com.ups.ship.ReceiptSpecificationType] = None)


case class ShipAcceptRequest(Request: com.ups.ship.RequestType,
  ShipmentDigest: String)


case class ShipmentResponse(Response: com.ups.ship.ResponseType,
  ShipmentResults: com.ups.ship.ShipmentResultsType)


case class ShipConfirmResponse(Response: com.ups.ship.ResponseType,
  ShipmentResults: com.ups.ship.ShipmentResultsType)


case class ShipAcceptResponse(Response: com.ups.ship.ResponseType,
  ShipmentResults: com.ups.ship.ShipmentResultsType)


case class ShipmentServiceOptions(SaturdayDeliveryIndicator: Option[String] = None,
  COD: Option[com.ups.ship.CODType] = None,
  Notification: Seq[com.ups.ship.NotificationType] = Nil,
  LabelDelivery: Option[com.ups.ship.LabelDeliveryType] = None,
  InternationalForms: Option[com.ups.ship.InternationalFormType] = None,
  DeliveryConfirmation: Option[com.ups.ship.DeliveryConfirmationType] = None,
  ReturnOfDocumentIndicator: Option[String] = None,
  ImportControlIndicator: Option[String] = None,
  LabelMethod: Option[com.ups.ship.LabelMethodType] = None,
  CommercialInvoiceRemovalIndicator: Option[String] = None,
  UPScarbonneutralIndicator: Option[String] = None,
  PreAlertNotification: Seq[com.ups.ship.PreAlertNotificationType] = Nil,
  ExchangeForwardIndicator: Option[String] = None) extends ShipmentServiceOptionsTypable


case class ShipmentType(Description: Option[String] = None,
  ReturnService: Option[com.ups.ship.ReturnServiceType] = None,
  DocumentsOnlyIndicator: Option[String] = None,
  Shipper: com.ups.ship.ShipperType,
  ShipTo: com.ups.ship.ShipToType,
  ShipFrom: Option[com.ups.ship.ShipFromType] = None,
  PaymentInformation: Option[com.ups.ship.PaymentInfoType] = None,
  FRSPaymentInformation: Option[com.ups.ship.FRSPaymentInfoType] = None,
  GoodsNotInFreeCirculationIndicator: Option[String] = None,
  ShipmentRatingOptions: Option[com.ups.ship.RateInfoType] = None,
  MovementReferenceNumber: Option[String] = None,
  ReferenceNumber: Seq[com.ups.ship.ReferenceNumberType] = Nil,
  Service: com.ups.ship.ServiceType,
  InvoiceLineTotal: Option[com.ups.ship.CurrencyMonetaryType] = None,
  ShipmentServiceOptions: Option[com.ups.ship.ShipmentServiceOptions] = None,
  Package: Seq[com.ups.ship.PackageType] = Nil)


case class ReturnServiceType(Code: String,
  Description: Option[String] = None)


case class ShipperType(Name: String,
  AttentionName: Option[String] = None,
  TaxIdentificationNumber: Option[String] = None,
  Phone: Option[com.ups.ship.ShipPhoneType] = None,
  ShipperNumber: Option[String] = None,
  FaxNumber: Option[String] = None,
  EMailAddress: Option[String] = None,
  Address: com.ups.ship.ShipAddressTypable) extends CompanyInfoTypable


trait CompanyInfoTypable {
  val Name: String
  val AttentionName: Option[String]
  val TaxIdentificationNumber: Option[String]
  val Phone: Option[com.ups.ship.ShipPhoneType]
}


case class CompanyInfoType(Name: String,
  AttentionName: Option[String] = None,
  TaxIdentificationNumber: Option[String] = None,
  Phone: Option[com.ups.ship.ShipPhoneType] = None) extends CompanyInfoTypable


case class ShipPhoneType(Number: String,
  Extension: Option[String] = None)


trait ShipAddressTypable {
  val AddressLine: Seq[String]
  val City: String
  val StateProvinceCode: Option[String]
  val PostalCode: Option[String]
  val CountryCode: String
}


case class ShipAddressType(AddressLine: Seq[String] = Nil,
  City: String,
  StateProvinceCode: Option[String] = None,
  PostalCode: Option[String] = None,
  CountryCode: String) extends ShipAddressTypable


case class ShipToType(Name: String,
  AttentionName: Option[String] = None,
  TaxIdentificationNumber: Option[String] = None,
  Phone: Option[com.ups.ship.ShipPhoneType] = None,
  FaxNumber: Option[String] = None,
  EMailAddress: Option[String] = None,
  Address: com.ups.ship.ShipToAddressType,
  LocationID: Option[String] = None) extends CompanyInfoTypable


case class ShipToAddressType(AddressLine: Seq[String] = Nil,
  City: String,
  StateProvinceCode: Option[String] = None,
  PostalCode: Option[String] = None,
  CountryCode: String,
  ResidentialAddressIndicator: Option[String] = None) extends ShipAddressTypable


case class ShipFromType(Name: String,
  AttentionName: Option[String] = None,
  TaxIdentificationNumber: Option[String] = None,
  Phone: Option[com.ups.ship.ShipPhoneType] = None,
  FaxNumber: Option[String] = None,
  Address: com.ups.ship.ShipAddressTypable) extends CompanyInfoTypable


case class PrepaidType(BillShipper: com.ups.ship.BillShipperType)


case class BillShipperType(AccountNumber: Option[String] = None,
  CreditCard: Option[com.ups.ship.CreditCardType] = None)


case class CreditCardType(Type: String,
  Number: String,
  ExpirationDate: String,
  SecurityCode: String,
  Address: Option[com.ups.ship.CreditCardAddressType] = None)


case class CreditCardAddressType(AddressLine: Seq[String] = Nil,
  City: String,
  StateProvinceCode: String,
  PostalCode: String,
  CountryCode: String)


case class BillThirdPartyChargeType(AccountNumber: String,
  Address: com.ups.ship.AccountAddressType)


case class AccountAddressType(PostalCode: Option[String] = None,
  CountryCode: String)


case class FreightCollectType(BillReceiver: com.ups.ship.BillReceiverType)


case class BillReceiverType(AccountNumber: String,
  Address: Option[com.ups.ship.BillReceiverAddressType] = None)


case class BillReceiverAddressType(PostalCode: Option[String] = None)


case class PaymentInfoType(ShipmentCharge: Seq[com.ups.ship.ShipmentChargeType] = Nil,
  SplitDutyVATIndicator: Option[String] = None)


case class ShipmentChargeType(Type: String,
  BillShipper: Option[com.ups.ship.BillShipperType] = None,
  BillReceiver: Option[com.ups.ship.BillReceiverType] = None,
  BillThirdParty: Option[com.ups.ship.BillThirdPartyChargeType] = None,
  ConsigneeBilledIndicator: Option[String] = None)


case class FRSPaymentInfoType(Type: com.ups.ship.PaymentType,
  AccountNumber: String,
  Address: Option[com.ups.ship.AccountAddressType] = None)


case class PaymentType(Code: String,
  Description: Option[String] = None)


case class RateInfoType(NegotiatedRatesIndicator: Option[String] = None,
  FRSShipmentIndicator: Option[String] = None,
  RateChartIndicator: Option[String] = None)


case class ReferenceNumberType(BarCodeIndicator: Option[String] = None,
  Code: Option[String] = None,
  Value: String)


case class ServiceType(Code: String,
  Description: Option[String] = None)


case class CurrencyMonetaryType(CurrencyCode: String,
  MonetaryValue: String)


trait ShipmentServiceOptionsTypable {
  val SaturdayDeliveryIndicator: Option[String]
  val COD: Option[com.ups.ship.CODType]
  val Notification: Seq[com.ups.ship.NotificationType]
  val LabelDelivery: Option[com.ups.ship.LabelDeliveryType]
  val InternationalForms: Option[com.ups.ship.InternationalFormType]
  val DeliveryConfirmation: Option[com.ups.ship.DeliveryConfirmationType]
  val ReturnOfDocumentIndicator: Option[String]
  val ImportControlIndicator: Option[String]
  val LabelMethod: Option[com.ups.ship.LabelMethodType]
  val CommercialInvoiceRemovalIndicator: Option[String]
  val UPScarbonneutralIndicator: Option[String]
  val PreAlertNotification: Seq[com.ups.ship.PreAlertNotificationType]
  val ExchangeForwardIndicator: Option[String]
}


case class ShipmentServiceOptionsType(SaturdayDeliveryIndicator: Option[String] = None,
  COD: Option[com.ups.ship.CODType] = None,
  Notification: Seq[com.ups.ship.NotificationType] = Nil,
  LabelDelivery: Option[com.ups.ship.LabelDeliveryType] = None,
  InternationalForms: Option[com.ups.ship.InternationalFormType] = None,
  DeliveryConfirmation: Option[com.ups.ship.DeliveryConfirmationType] = None,
  ReturnOfDocumentIndicator: Option[String] = None,
  ImportControlIndicator: Option[String] = None,
  LabelMethod: Option[com.ups.ship.LabelMethodType] = None,
  CommercialInvoiceRemovalIndicator: Option[String] = None,
  UPScarbonneutralIndicator: Option[String] = None,
  PreAlertNotification: Seq[com.ups.ship.PreAlertNotificationType] = Nil,
  ExchangeForwardIndicator: Option[String] = None) extends ShipmentServiceOptionsTypable


case class PreAlertNotificationType(EMailMessage: Option[com.ups.ship.PreAlertEMailMessageType] = None,
  VoiceMessage: Option[com.ups.ship.PreAlertVoiceMessageType] = None,
  TextMessage: Option[com.ups.ship.PreAlertTextMessageType] = None,
  Locale: com.ups.ship.LocaleType)


case class PreAlertEMailMessageType(EMailAddress: String,
  UndeliverableEMailAddress: Option[String] = None)


case class LocaleType(Language: String,
  Dialect: String)


case class PreAlertVoiceMessageType(PhoneNumber: String)


case class PreAlertTextMessageType(PhoneNumber: String)


case class ContactInfoType(Name: Option[String] = None,
  Phone: Option[com.ups.ship.ShipPhoneType] = None)


case class CODType(CODFundsCode: String,
  CODAmount: com.ups.ship.CurrencyMonetaryType)


case class NotificationType(NotificationCode: String,
  EMail: com.ups.ship.EmailDetailsType)


case class LabelDeliveryType(EMail: Option[com.ups.ship.EmailDetailsType] = None,
  LabelLinksIndicator: Option[String] = None)


case class EmailDetailsType(EMailAddress: Seq[String] = Nil,
  UndeliverableEMailAddress: Option[String] = None,
  FromEMailAddress: Option[String] = None,
  FromName: Option[String] = None,
  Memo: Option[String] = None,
  Subject: Option[String] = None,
  SubjectCode: Option[String] = None)


case class PackageType(Description: Option[String] = None,
  Packaging: Option[com.ups.ship.PackagingType] = None,
  Dimensions: Option[com.ups.ship.DimensionsType] = None,
  PackageWeight: Option[com.ups.ship.PackageWeightType] = None,
  LargePackageIndicator: Option[String] = None,
  ReferenceNumber: Seq[com.ups.ship.ReferenceNumberType] = Nil,
  AdditionalHandlingIndicator: Option[String] = None,
  PackageServiceOptions: Option[com.ups.ship.PackageServiceOptionsType] = None,
  Commodity: Option[com.ups.ship.CommodityType] = None)


case class PackagingType(Code: String,
  Description: Option[String] = None)


case class DimensionsType(UnitOfMeasurement: com.ups.ship.ShipUnitOfMeasurementType,
  Length: String,
  Width: String,
  Height: String)


case class ShipUnitOfMeasurementType(Code: String,
  Description: Option[String] = None)


case class PackageWeightType(UnitOfMeasurement: com.ups.ship.ShipUnitOfMeasurementType,
  Weight: String)


case class PackageServiceOptionsType(DeliveryConfirmation: Option[com.ups.ship.DeliveryConfirmationType] = None,
  DeclaredValue: Option[com.ups.ship.PackageDeclaredValueType] = None,
  COD: Option[com.ups.ship.PSOCODType] = None,
  VerbalConfirmation: Option[com.ups.ship.VerbalConfirmationType] = None,
  ShipperReleaseIndicator: Option[String] = None,
  Notification: Option[com.ups.ship.PSONotificationType] = None,
  ReturnsFlexibleAccessIndicator: Option[String] = None,
  DryIce: Option[com.ups.ship.DryIceType] = None)


case class PackageDeclaredValueType(Type: Option[com.ups.ship.DeclaredValueType] = None,
  CurrencyCode: String,
  MonetaryValue: String)


case class DeclaredValueType(Code: String,
  Description: Option[String] = None)


case class DeliveryConfirmationType(DCISType: String,
  DCISNumber: Option[String] = None)


case class LabelMethodType(Code: String,
  Description: Option[String] = None)


case class VerbalConfirmationType(ContactInfo: Option[com.ups.ship.ContactInfoType] = None)


case class PSOCODType(CODFundsCode: String,
  CODAmount: com.ups.ship.CurrencyMonetaryType)


case class PSONotificationType(NotificationCode: String,
  EMail: com.ups.ship.EmailDetailsType)


case class LabelSpecificationType(LabelImageFormat: com.ups.ship.LabelImageFormatType,
  HTTPUserAgent: Option[String] = None,
  LabelStockSize: Option[com.ups.ship.LabelStockSizeType] = None,
  Instruction: Seq[com.ups.ship.InstructionCodeDescriptionType] = Nil)


case class InstructionCodeDescriptionType(Code: String,
  Description: Option[String] = None)


case class LabelImageFormatType(Code: String,
  Description: Option[String] = None)


case class LabelStockSizeType(Height: String,
  Width: String)


case class CommodityType(FreightClass: String,
  NMFC: Option[com.ups.ship.NMFCType] = None)


case class NMFCType(PrimeCode: String,
  SubCode: Option[String] = None)


case class ShipmentResultsType(ShipmentCharges: Option[com.ups.ship.ShipmentChargesType] = None,
  NegotiatedRateCharges: Option[com.ups.ship.NegotiatedRateChargesType] = None,
  FRSShipmentData: Option[com.ups.ship.FRSShipmentDataType] = None,
  BillingWeight: com.ups.ship.BillingWeightType,
  ShipmentIdentificationNumber: Option[String] = None,
  ShipmentDigest: Option[String] = None,
  PackageResults: Seq[com.ups.ship.PackageResultsType] = Nil,
  ControlLogReceipt: Seq[com.ups.ship.ImageTypable] = Nil,
  Form: Option[com.ups.ship.FormType] = None,
  CODTurnInPage: Option[com.ups.ship.SCReportType] = None,
  HighValueReport: Option[com.ups.ship.HighValueReportType] = None,
  LabelURL: Option[String] = None,
  LocalLanguageLabelURL: Option[String] = None,
  ReceiptURL: Option[String] = None,
  LocalLanguageReceiptURL: Option[String] = None)


case class ShipmentChargesType(RateChart: Option[String] = None,
  TransportationCharges: com.ups.ship.ShipChargeType,
  ServiceOptionsCharges: com.ups.ship.ShipChargeType,
  TotalCharges: com.ups.ship.ShipChargeType)


case class NegotiatedRateChargesType(TotalCharge: Option[com.ups.ship.ShipChargeType] = None)


case class ShipChargeType(CurrencyCode: String,
  MonetaryValue: String)


case class FRSShipmentDataType(TransportationCharges: com.ups.ship.TransportationChargeType)


case class TransportationChargeType(GrossCharge: com.ups.ship.ShipChargeType,
  DiscountAmount: com.ups.ship.ShipChargeType,
  DiscountPercentage: String,
  NetCharge: com.ups.ship.ShipChargeType)


case class BillingWeightType(UnitOfMeasurement: com.ups.ship.BillingUnitOfMeasurementType,
  Weight: String)


case class BillingUnitOfMeasurementType(Code: String,
  Description: Option[String] = None)


case class PackageResultsType(TrackingNumber: String,
  ServiceOptionsCharges: Option[com.ups.ship.ShipChargeType] = None,
  ShippingLabel: Option[com.ups.ship.LabelType] = None,
  ShippingReceipt: Option[com.ups.ship.ReceiptType] = None,
  USPSPICNumber: Option[String] = None)


case class LabelType(ImageFormat: com.ups.ship.ImageFormatType,
  GraphicImage: String,
  InternationalSignatureGraphicImage: Option[String] = None,
  HTMLImage: Option[String] = None,
  PDF417: Option[String] = None) extends ImageTypable


case class ReceiptType(ImageFormat: com.ups.ship.ImageFormatType,
  GraphicImage: String) extends ImageTypable


trait ImageTypable {
  val ImageFormat: com.ups.ship.ImageFormatType
  val GraphicImage: String
}


case class ImageType(ImageFormat: com.ups.ship.ImageFormatType,
  GraphicImage: String) extends ImageTypable


case class FormType(Code: String,
  Description: String,
  Image: Option[com.ups.ship.FormImageType] = None,
  FormGroupId: Option[String] = None,
  FormGroupIdName: Option[String] = None)


case class FormImageType(ImageFormat: Option[com.ups.ship.ImageFormatType] = None,
  GraphicImage: Option[String] = None)


case class ImageFormatType(Code: String,
  Description: Option[String] = None)


case class SCReportType(Image: com.ups.ship.ImageTypable)


case class HighValueReportType(Image: com.ups.ship.ImageTypable)


case class DryIceType(RegulationSet: String,
  DryIceWeight: com.ups.ship.DryIceWeightType,
  MedicalUseIndicator: Option[String] = None)


case class DryIceWeightType(UnitOfMeasurement: com.ups.ship.ShipUnitOfMeasurementType,
  Weight: String)


case class ReceiptSpecificationType(ImageFormat: com.ups.ship.ReceiptImageFormatType)


case class ReceiptImageFormatType(Code: String,
  Description: Option[String] = None)

